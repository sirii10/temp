@page "/AddPerformanceForm"


<div class="form-container">
    <h2>Performance Form</h2>
    <form id="eventForm">
        <label for="date">Date:</label>
        <input type="date" id="date" name="date" required >
        @*<InputText @bind-Value="@eventData.Date" />*@

        <label for="startTime">Start Time:</label>
        <input type="time" id="startTime" name="startTime" required>

        <label for="duration">Duration (minutes):</label>
        <input type="number" id="duration" name="duration" placeholder="Enter duration" required>

        <label for="venue">Venue:</label>
        <input type="text" id="venue" name="venue" placeholder="Enter venue" required>

        <label for="title">Title:</label>
        <input type="text" id="title" name="title" placeholder="Enter event title" required>

        <label for="type">Type:</label>
        <input type="text" id="type" name="type" placeholder="Enter event type">

        <label for="description">Description:</label>
        <textarea id="description" name="description" placeholder="Enter event description"></textarea>

        <label for="recording">Recording:</label>
        <input type="url" id="recording" name="recording" placeholder="Enter recording URL">

        <label for="transcription">Transcription:</label>
        <input type="text" id="transcription" name="transcription" placeholder="Enter transcription details">

        <div id="performers">
            <label for="performer1">Performer 1:</label>
            <input type="text" id="performer1" name="performers[]" placeholder="Enter performer name">
        </div>
        <button type="button" id="addPerformer">Add Performer</button>

        <button type="submit">Submit</button>
    </form>
</div>
@*<EditForm Model="@eventData" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Date:</label>
        <InputText @bind-Value="@eventData.Date" />
    </div>

    <div>
        <label>Start Time:</label>
        <InputText @bind-Value="@eventData.StartTime" />
    </div>

    <div>
        <label>Duration (minutes):</label>
        <InputNumber @bind-Value="@eventData.Duration" />
    </div>

    <div>
        <label>Venue:</label>
        <InputText @bind-Value="@eventData.Venue" />
    </div>

    <div>
        <label>Title:</label>
        <InputText @bind-Value="@eventData.Title" />
    </div>

    <div>
        <label>Type:</label>
        <InputText @bind-Value="@eventData.Type" />
    </div>

    <div>
        <label>Description:</label>
        <InputTextArea @bind-Value="@eventData.Description" />
    </div>

    <div>
        <label>Recording:</label>
        <InputText @bind-Value="@eventData.Recording" />
    </div>

    <div>
        <label>Transcription:</label>
        <InputText @bind-Value="@eventData.Transcription" />
    </div>

    @for (int i = 0; i < eventData.Performers.Count; i++)
    {
        <div>
            <label>Performer @i+1:</label>
            <InputText @bind-Value="@eventData.Performers[i]" />
        </div>
    }

    <button type="button" @onclick="AddPerformer">Add Performer</button>
    <button type="submit">Submit</button>
</EditForm>*@

@code {
    private EventData eventData = new EventData();

    private void HandleValidSubmit()
    {
        // Handle form submission logic here
    }

    private void AddPerformer()
    {
        eventData.Performers.Add(string.Empty);
    }

    public class EventData
    {
        public string Date { get; set; } 
        public string StartTime { get; set; }
        public int Duration { get; set; }
        public string Venue { get; set; }
        public string Title { get; set; }
        public string Type { get; set; }
        public string Description { get; set; }
        public string Recording { get; set; }
        public string Transcription { get; set; }
        public List<string> Performers { get; set; } = new List<string> { string.Empty };
    }
}
